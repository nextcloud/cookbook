
name: Run test suite on code base
author: Christian Wolf <github@christianwolf.email>
description: <
    This is a github action to test the cookbook Nextcloud app.

inputs:
    phpVersion:
        description: The PHP version to use for the tests
        required: false
        default: '7'
    db:
        description: The db type to use
        required: true
    server:
        description: The http server to use for integration testing (apache, nginx)
        required: true
    coreVersion:
        description: The version of the NC server core to test against.
        required: true
    allowFailure:
        description: The test may fail
        required: false
        default: false
outputs:
    silentFail:
        description: If the test failed but was allowed to do so
        value: ${{ steps.run.outputs.silent-fail }}

runs:
    using: 'composite'
    steps:
        - name: Trigger the tests
          run: >-
            mkdir -p vendor &&
            cd .github/actions/run-tests &&
            export ALLOW_FAILURE=${{ inputs.allowFailure }} &&
            export INPUT_DB=${{ inputs.db }} &&
            export PHP_VERSION=${{ inputs.phpVersion }} &&
            export HTTP_SERVER=${{ inputs.server }} &&
            export COMPOSE_DOCKER_CLI_BUILD=1 &&
            ./run-locally.sh
            --pull
            --create-images
            --start-helpers
            --setup-environment ${{ inputs.coreVersion }}
            --create-env-dump
            --create-plain-dump plain
            --install-composer-deps
            --run-unit-tests --run-migration-tests
            --extract-code-coverage
            --shutdown-helpers || { failed=$?; } ;
            if [ -n "$failed" ]; then 
            echo "test_result=$failed" >> $GITHUB_ENV;
            else 
            echo "test_result=0" >> $GITHUB_ENV;
            fi;
          shell: bash
          id: run
        
        - name: Export the annotations of unit tests to github
          shell: bash
          run: >-
            if [ -r .github/actions/run-tests/volumes/coverage/teamcity.log ]; then
            python .github/actions/run-tests/extract-annotations.py .github/actions/run-tests/volumes/coverage/teamcity.log ;
            fi
        - name: Export the annotations of integration tests to github
          shell: bash
          run: >-
            if [ -r .github/actions/run-tests/volumes/coverage/teamcity.integration.log ]; then
            python .github/actions/run-tests/extract-annotations.py .github/actions/run-tests/volumes/coverage/teamcity.integration.log ;
            fi
        - name: Export the annotations of migration tests to github
          shell: bash
          run: >-
            if [ -r .github/actions/run-tests/volumes/coverage/teamcity.migration.log ]; then
            python .github/actions/run-tests/extract-annotations.py .github/actions/run-tests/volumes/coverage/teamcity.migration.log ;
            fi
        
